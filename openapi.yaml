openapi: 3.0.0
info:
  title: URL Shortener API
  version: 1.0.0
  description: API for creating and managing shortened URLs

servers:
  - url: http://localhost:8080
    description: Local development server

paths:
  /healthcheck:
    get:
      summary: Check API health
      description: Returns the health status of the API and its dependencies
      responses:
        '200':
          description: Health check successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  mongo:
                    type: string
                  redis:
                    type: string

  /shorten:
    post:
      summary: Create a new short URL
      description: Creates a new shortened URL. The original_url will be set to the app's base_url automatically.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                custom_alias:
                  type: string
                  example: "example-alias"
                expires_at:
                  type: string
                  format: date-time
                  example: "2025-12-31T23:59:59Z"
                metadata:
                  type: object
                  properties:
                    source:
                      type: string
                      example: "web"
              required: []
      responses:
        '201':
          description: Short URL created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  shortUrl:
                    type: object
                    properties:
                      app_id:
                        type: string
                      original_url:
                        type: string
                        description: The app's base_url used as the original_url
                      short_code:
                        type: string
                      full_short_url:
                        type: string
                      expires_at:
                        type: string
                      metadata:
                        type: object
        '400':
          description: Validation error
        '401':
          description: Unauthorized

    get:
      summary: Get all short URLs
      description: Retrieves all shortened URLs
      responses:
        '200':
          description: List of short URLs
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                    short_code:
                      type: string
                    original_url:
                      type: string
                    created_at:
                      type: string
                      format: date-time

  /shorten/{id}:
    put:
      summary: Update a short URL
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                original_url:
                  type: string
                  format: uri
                  example: "https://newexample.com"
                expires_at:
                  type: string
                  format: date-time
                  example: "2025-12-31T23:59:59Z"
                metadata:
                  type: object
                  example: {}
      responses:
        '200':
          description: Short URL updated successfully
        '400':
          description: Validation error
        '404':
          description: Short URL not found

    delete:
      summary: Delete a short URL
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Short URL deleted successfully
        '404':
          description: Short URL not found

  /{short_code}:
    get:
      summary: Redirect to original URL
      parameters:
        - name: short_code
          in: path
          required: true
          schema:
            type: string
      responses:
        '302':
          description: Redirect to original URL
        '404':
          description: Short URL not found
        '410':
          description: Short URL has expired

  /shorten/details/{short_code}:
    get:
      summary: Get details for a short URL
      description: Fetch all details for a given short_code. No authentication required.
      parameters:
        - name: short_code
          in: path
          required: true
          schema:
            type: string
          description: The short code of the URL (e.g., myalias-4f8d2k1z)
      responses:
        '200':
          description: Details of the short URL
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  original_url:
                    type: string
                  short_code:
                    type: string
                  custom_alias:
                    type: string
                  expires_at:
                    type: string
                  metadata:
                    type: object
                  app_id:
                    type: string
                  app_name:
                    type: string
                    description: Name of the app that created the short URL
                  app_url:
                    type: string
                    description: Base URL of the app that created the short URL
        '404':
          description: Short URL not found
        '400':
          description: Validation error

  /api/apps/register:
    post:
      summary: Register a new app
      description: Allows a client to register a new app and receive a unique authentication token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - base_url
              properties:
                name:
                  type: string
                  description: The name of the app.
                  example: MyApp
                base_url:
                  type: string
                  description: The base URL of the app.
                  example: https://myapp.com
      responses:
        '201':
          description: App registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: The unique ID of the app.
                    example: 64b7c9f5e4b0c2a1d8f9e123
                  name:
                    type: string
                    description: The name of the app.
                    example: MyApp
                  base_url:
                    type: string
                    description: The base URL of the app.
                    example: https://myapp.com
                  token:
                    type: string
                    description: The unique authentication token for the app.
                    example: a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Validation failed
                  message:
                    type: string
                    example: Both "name" and "base_url" are required.
        '500':
          description: Internal server error

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT